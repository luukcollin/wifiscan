[{"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\reportWebVitals.js":"1","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\index.js":"2","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\RealNetwork.js":"3","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\Output.js":"4","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\RealPassword.js":"5","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\ChartsCard.js":"6","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\PortsTable.js":"7","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\Navbar.js":"8","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\SidebarData.js":"9","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\CompactCard.js":"10","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\MacTable.js":"11","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\WifiSignal.js":"12","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\StringStripper.js":"13","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\RealPasswordStrengthMeter.js":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":592,"mtime":1610016607284,"results":"17","hashOfConfig":"16"},{"size":3494,"mtime":1608039134803,"results":"18","hashOfConfig":"16"},{"size":17938,"mtime":1610034027145,"results":"19","hashOfConfig":"16"},{"size":2220,"mtime":1609948775990,"results":"20","hashOfConfig":"16"},{"size":1402,"mtime":1609948776016,"results":"21","hashOfConfig":"16"},{"size":1667,"mtime":1610026203869,"results":"22","hashOfConfig":"16"},{"size":1642,"mtime":1609948776030,"results":"23","hashOfConfig":"16"},{"size":549,"mtime":1609948776038,"results":"24","hashOfConfig":"16"},{"size":1575,"mtime":1609948776022,"results":"25","hashOfConfig":"16"},{"size":1573,"mtime":1610026132316,"results":"26","hashOfConfig":"16"},{"size":426,"mtime":1610034047543,"results":"27","hashOfConfig":"16"},{"size":462,"mtime":1610031396737,"results":"28","hashOfConfig":"16"},{"size":1516,"mtime":1610030514228,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jon0s3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\reportWebVitals.js",[],["67","68"],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\index.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\RealNetwork.js",["69","70","71","72"],"import React, { Component } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport data from \"./data.json\";\r\nconst WEAK_SIGNAL = 30;\r\nconst MEDIUM_SIGNAL = 70;\r\n\r\nconst networkList = data.networks;\r\nlet networkVisualElements = [];\r\n\r\nclass RealNetwork extends Component {\r\n  state = {\r\n    network: null,\r\n    disabled: true,\r\n    showtext: false,\r\n    selected: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(networkList[3]);\r\n    this.readElements();\r\n  }\r\n\r\n  readElements() {\r\n    var i;\r\n    for (i = 0; i < networkList.length; i++) {\r\n      networkVisualElements.push(\"network\" + i);\r\n    }\r\n  }\r\n\r\n  handleSelected(network, i) {\r\n    this.setState({ network: network });\r\n    this.setState({ disabled: false });\r\n    let id = \"network\" + i;\r\n    console.log(id);\r\n    console.log(document.getElementById(id));\r\n    if (\r\n      this.state.selected != null &&\r\n      this.state.selected !== document.getElementById(id)\r\n    ) {\r\n      this.state.selected.className = \"non-selected\";\r\n    }\r\n    this.setState({ selected: document.getElementById(id) });\r\n    this.state.selected = document.getElementById(id); //should be using this.setState(...)\r\n    this.state.selected.className = \"selected\";\r\n  }\r\n\r\n  renderOutput() {\r\n    if (this.state.showtext) {\r\n      return (\r\n        <p>\r\n          {this.state.network.ssid} wordt gescant. Het wachtwoord:{\" \"}\r\n          {document.getElementById(\"password\").value}\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  showPassword() {\r\n    this.setState({ showtext: true });\r\n  }\r\n\r\n  getSignalImage(strength) {\r\n    if (strength <= WEAK_SIGNAL) {\r\n      return \"/img/weakSignal.png\";\r\n    } else if (strength > MEDIUM_SIGNAL) {\r\n      return \"/img/strongSignal.png\";\r\n    } else {\r\n      return \"/img/mediumSignal.png\";\r\n    }\r\n  }\r\n\r\n  sortedByStrength(list) {\r\n    return list.sort(function (a, b) {\r\n      return b.strength - a.strength;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"help-text\">\r\n          <p>Kies het Wi-Fi netwerk om te scannen:</p>\r\n        </div>\r\n        <h1>{networkList[\"juicy\"]}</h1>\r\n        <ul>\r\n          {this.sortedByStrength(networkList).map((network, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                id={\"network\" + i}\r\n                onClick={() => {\r\n                  this.handleSelected(network, i);\r\n                }}\r\n              >\r\n                <li className=\"list-item\">\r\n                  <div className=\"network-item\">\r\n                    <h4>\r\n                      <img\r\n                        className=\"wifi-icon\"\r\n                        src={this.getSignalImage(network.strength)}\r\n                      />\r\n                      {network.ssid}\r\n                      {\"   \"}\r\n                      {network.encryption}\r\n                    </h4>\r\n                  </div>\r\n                </li>\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n        <div class=\"help-text\">\r\n          <p>Typ het wachtwoord voor het gekozen netwerk:</p>\r\n        </div>\r\n        <div>\r\n          <input disabled={this.state.disabled} type=\"password\" id=\"password\" />\r\n          <button\r\n            className=\"scan-button\"\r\n            disabled={this.state.disabled}\r\n            onClick={() => {\r\n              this.showPassword();\r\n            }}\r\n          >\r\n            Scan!\r\n          </button>\r\n        </div>\r\n        {this.renderOutput()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RealNetwork;\r\n",["73","74"],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\Output.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React, { Component, Fragment } from \"react\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport wirelessInfo from \"./output/wirelessInfo.json\";\r\nimport gatewayDiscover from \"./output/gatewaydiscover.json\";\r\nimport networkDiscover from \"./output/networkdiscover.json\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport RealPassword from \"./RealPassword\";\r\nimport StringStripper from \"./StringStripper\";\r\n\r\nimport MacTable from \"./components/MacTable\";\r\nimport ChartsCard from \"./components/ChartsCard\";\r\nimport PortsTable from \"./components/PortsTable\";\r\nimport CompactCard from \"./components/CompactCard\";\r\nimport WifiSignal from \"./components/WifiSignal\";\r\nimport RealPasswordStrengthMeter from \"./components/RealPasswordStrengthMeter\";\r\n\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  BarChart,\r\n  StackedBarChart,\r\n  Legend,\r\n  Bar,\r\n} from \"recharts\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\n\r\nconst gatewayData = gatewayDiscover[\"scan\"];\r\nconst networkData = networkDiscover;\r\nconst wirelessInformation = wirelessInfo.wireless;\r\nconst data = [\r\n  { name: \"Security Level\", value: 75 },\r\n  { name: \"100-Security Level\", value: 25 },\r\n];\r\nconst dataBarChart = [\r\n  { name: \"WPA3\", Strength: 100, Aes: 25 },\r\n  { name: \"WPA2\", Strength: 75, Aes: 25 },\r\n  { name: \"WPA(1)\", Strength: 40, Aes: 25 },\r\n  { name: \"WEP\", Strength: 15, Aes: 25 },\r\n];\r\n\r\nconst PIECHART_COLORS = [\"#0088FE\", \"#ffffff\"];\r\nconst datetime = new Date();\r\nlet passwordObject;\r\nclass Output extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handlePasswordChanged = this.handlePasswordChanged.bind(this);\r\n    passwordObject = new RealPassword();\r\n    this.fetchJSON();\r\n  }\r\n  state = {\r\n    points: 0,\r\n\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        type: \"radialBar\",\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: \"100%\",\r\n          },\r\n        },\r\n      },\r\n      labels: [\"Cricket\"],\r\n\r\n      openPorts: [],\r\n\r\n      services: [],\r\n\r\n      sheet: \"\",\r\n    },\r\n    wirelessInfo: {\r\n      ssid: \"\",\r\n      protection: \"\",\r\n      authentication: \"\",\r\n      pairwiseChipper: \"\",\r\n      strength: \"\",\r\n      externalIp: \"\",\r\n    },\r\n    routerInfo: {\r\n      name: \"\",\r\n      os: \"\",\r\n      accuracy: \"\",\r\n    },\r\n    networkInfo: {\r\n      ip4: [],\r\n      macs: [],\r\n      vendors: [],\r\n    },\r\n  };\r\n\r\n  fetchJSON() {\r\n    let stringStripper = new StringStripper();\r\n\r\n    this.state.routerInfo.name = gatewayData.osmatch[0].name;\r\n    this.state.routerInfo.os = gatewayData.osmatch[0].osclass.vendor;\r\n    this.state.routerInfo.accuracy = gatewayData.osmatch[0].accuracy;\r\n    console.log(\"Router os: \" + this.state.routerInfo.os);\r\n    console.log(\"Name of router: \" + this.state.routerInfo.name);\r\n    console.log(\"Accuracy: \" + this.state.routerInfo.accuracy + \"%\");\r\n\r\n    this.state.wirelessInfo.authentication = stringStripper.stripFrom(\r\n      wirelessInformation[0].authenticatie,\r\n      \":\",\r\n      4\r\n    );\r\n    console.log(\r\n      \"Chipper:\" +\r\n        stringStripper.stripFrom(wirelessInformation[0].pairwiseChipper, \":\")\r\n    );\r\n    this.state.wirelessInfo.pairwiseChipper =\r\n      stringStripper\r\n        .stripFrom(wirelessInformation[0].pairwiseChipper, \":\")\r\n        .trim() === \"CCMP\"\r\n        ? \"AES\"\r\n        : stringStripper.stripFrom(wirelessInformation[0].pairwiseChipper, \":\");\r\n\r\n    this.state.wirelessInfo.strength = stringStripper.stripFrom(\r\n      stringStripper.stripTill(wirelessInformation[0].signalstrength, \"/\"),\r\n      \"=\"\r\n    );\r\n    this.state.wirelessInfo.externalIp = wirelessInformation[0].externalIP;\r\n    console.log(\r\n      \"Authenticatie: \" +\r\n        stringStripper.stripFrom(this.state.wirelessInfo.authentication, \":\")\r\n    );\r\n    console.log(\"Pairwise Chipper: \" + this.state.wirelessInfo.pairwiseChipper);\r\n    console.log(\"Strength: \" + this.state.wirelessInfo.strength);\r\n    console.log(\"External Ip: \" + this.state.wirelessInfo.externalIp);\r\n\r\n    console.log(this.state.os);\r\n    wirelessInformation.map(\r\n      (item, i) => (\r\n        (this.state.wirelessInfo.ssid = item.ssid),\r\n        (this.state.wirelessInfo.protection = stringStripper.stripFrom(\r\n          item.protocol,\r\n          \"/\",\r\n          4\r\n        )),\r\n        this.setState({ ssid: item.ssid })\r\n      )\r\n    );\r\n\r\n    let ips = [];\r\n    let macs = [];\r\n    let vendors = [];\r\n    console.log(\r\n      \"Sneaky: \" + networkData[\"scan\"][\"192.168.68.1\"][\"addresses\"][\"ipv4\"]\r\n    );\r\n\r\n    var keys = Object.keys(networkData);\r\n    var amountOfHosts = Object.keys(networkData[\"scan\"]).length;\r\n    var tagData = Object.keys(networkData[\"scan\"]);\r\n    for (var i = 0; i < amountOfHosts; i++) {\r\n      ips.push(tagData[i]);\r\n      macs.push(networkData[\"scan\"][ips[i]][\"addresses\"][\"mac\"]);\r\n      vendors.push(networkData[\"scan\"][ips[i]].vendor[macs[i]]);\r\n    }\r\n\r\n    console.log(\"Amount of hosts: \" + amountOfHosts);\r\n    console.log(\"Ip4s: \" + ips);\r\n    console.log(\"Macs: \" + macs);\r\n\r\n    this.state.networkInfo.ip4 = ips;\r\n    this.state.networkInfo.macs = macs;\r\n    this.state.networkInfo.vendors = vendors;\r\n    console.log(\"Vendors: \" + vendors);\r\n    console.log(\"Vendors state: \" + this.state.networkInfo.vendors);\r\n    let ports = [];\r\n    let services = [];\r\n\r\n    gatewayData.ports.map((item, i) => ports.push(item.portid));\r\n    gatewayData.ports.map((item, i) => services.push(item.service.name));\r\n    this.state.openPorts = ports;\r\n    this.state.services = services;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderPorts();\r\n  }\r\n\r\n  handleString(input, altMessage) {\r\n    if (input.length == 0) {\r\n      return altMessage;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  renderPorts() {\r\n    let i = 0;\r\n    let sheet = \"\";\r\n    for (i < this.state.openPorts.length; i++; ) {\r\n      sheet += <p>ports: {this.state.openPorts[i]}</p>;\r\n    }\r\n\r\n    this.setState({ sheet: sheet });\r\n    return sheet;\r\n  }\r\n\r\n  getRandomNumber() {\r\n    return Math.floor(Math.random() * 100);\r\n  }\r\n\r\n  handlePasswordChanged() {\r\n    passwordObject.setPassword(document.getElementById(\"passwordfield\").value);\r\n    this.setState({ points: passwordObject.getPoints() });\r\n  }\r\n\r\n  touch() {\r\n    console.log(\"touch!\");\r\n  }\r\n\r\n  renderRowItems() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MobileView>{this.renderMobile()}</MobileView>\r\n        <BrowserView>{this.renderBrowser()}</BrowserView>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMobile() {\r\n    return <div className=\"container\"></div>;\r\n  }\r\n\r\n  renderBrowser() {\r\n    return (\r\n      <div className=\"layout\">\r\n        <div class=\"sidemenu\">\r\n          <Navbar></Navbar>\r\n        </div>\r\n        <div className=\"container\">\r\n          <header>\r\n            <p>Scan resultaat van {datetime.toLocaleString()}</p>\r\n            <img src=\"./img/cw-logo.png\" alt=\"Cyberwerf Logo\"></img>\r\n            <h1>Output Results</h1>\r\n          </header>\r\n\r\n          <div>\r\n            <Fragment>\r\n              <BrowserView>\r\n                <div className=\"row\">\r\n                  <Container fluid>\r\n                    <Row>\r\n                      <Col>\r\n                        <h2>\r\n                          Overall Score of {this.state.wirelessInfo.ssid}{\" \"}\r\n                        </h2>\r\n\r\n                        <PieChart\r\n                          width={400}\r\n                          height={200}\r\n                          onMouseEnter={this.onPieEnter}\r\n                        >\r\n                          <Pie\r\n                            data={data}\r\n                            cx={200}\r\n                            cy={100}\r\n                            startAngle={-270}\r\n                            endAngle={90}\r\n                            innerRadius={60}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                            blendStroke={true}\r\n                          >\r\n                            <Label\r\n                              fontSize={100}\r\n                              value=\"75%\"\r\n                              position=\"center\"\r\n                            />\r\n                            {data.map((entry, index) => (\r\n                              <Cell\r\n                                key={`cell-${index}`}\r\n                                fill={\r\n                                  PIECHART_COLORS[\r\n                                    index % PIECHART_COLORS.length\r\n                                  ]\r\n                                }\r\n                              />\r\n                            ))}\r\n                          </Pie>\r\n                        </PieChart>\r\n                        <div className=\"allblue\"></div>\r\n                        <CompactCard>\r\n                          <WifiSignal\r\n                            signalStrength={this.state.wirelessInfo.strength}\r\n                          ></WifiSignal>\r\n                        </CompactCard>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <CompactCard geslaagd={false}>\r\n                          <Table className=\"compact-card-component\">\r\n                            <thead>\r\n                              <PortsTable\r\n                                thArray={[\"Port Nr\", \"Status\", \"Approval\"]}\r\n                                tdArray={this.state.openPorts}\r\n                                services={this.state.services}\r\n                              ></PortsTable>\r\n                            </thead>\r\n                          </Table>\r\n                        </CompactCard>\r\n                        <CompactCard geslaagd={true}>\r\n                          <Table className=\"compact-card-component\">\r\n                            <thead>\r\n                              <MacTable\r\n                                thArray={[\r\n                                  \"IP4 Adress\",\r\n                                  \"Mac Adress\",\r\n                                  \"Vendors\",\r\n                                ]}\r\n                                ips={this.state.networkInfo.ip4}\r\n                                macs={this.state.networkInfo.macs}\r\n                                vendors={this.state.networkInfo.vendors}\r\n                              ></MacTable>\r\n                            </thead>\r\n                          </Table>\r\n                        </CompactCard>\r\n                        <CompactCard geslaagd={true}>\r\n                          <BarChart\r\n                            width={600}\r\n                            height={300}\r\n                            data={dataBarChart}\r\n                            layout=\"vertical\"\r\n                            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                          >\r\n                            <XAxis type=\"number\" />\r\n                            <YAxis type=\"category\" dataKey=\"name\" />\r\n\r\n                            <Legend />\r\n                            <Bar stackId=\"a\" dataKey=\"Strength\">\r\n                              {dataBarChart.map((entry, index) => (\r\n                                <Cell\r\n                                  fill={\r\n                                    entry.name ===\r\n                                    this.state.wirelessInfo.protection\r\n                                      ? \"#11ccee\"\r\n                                      : \"#3311ff\"\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </Bar>\r\n                            <Bar stackId=\"a\" dataKey=\"Aes\">\r\n                              {dataBarChart.map((entry, index) => (\r\n                                <Cell\r\n                                  fill={\r\n                                    entry.name ===\r\n                                    this.state.wirelessInfo.protection\r\n                                      ? \"#ffffff\"\r\n                                      : \"#000000\"\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </Bar>\r\n                          </BarChart>\r\n                        </CompactCard>\r\n\r\n                        <div className=\"allgreen\"></div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col className=\"biplaneColumn\">\r\n                        <Table className=\"bg-white text-dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>SSID</th>\r\n                              <th>Protection</th>\r\n                              <th>Authentication</th>\r\n                              <th>Pairwise Chipper</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.wirelessInfo.ssid}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.wirelessInfo.protection}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.wirelessInfo.authentication}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.wirelessInfo.pairwiseChipper}\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </Table>\r\n                        <Table className=\"bg-white text-dark\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Router Name</th>\r\n                              <th>Operating System</th>\r\n                              <th>Accuracy</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.routerInfo.name}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.routerInfo.os}\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                <div className=\"overflow\">\r\n                                  {this.state.routerInfo.accuracy + \"%\"}\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </Table>\r\n                        <div className=\"passwordstrengthmeter\">\r\n                          <h4>Password Strength Meter: </h4>\r\n\r\n                          <input\r\n                            placeholder=\"How strong is your password?\"\r\n                            type=\"text\"\r\n                            id=\"passwordfield\"\r\n                            onChange={this.handlePasswordChanged}\r\n                          ></input>\r\n                          <RealPasswordStrengthMeter\r\n                            percentage={this.state.points}\r\n                          ></RealPasswordStrengthMeter>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <ChartsCard\r\n                          geslaagd={true}\r\n                          statsText=\"Item title 1\"\r\n                          description=\"Some information about the item\"\r\n                          readMore={false}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <ChartsCard\r\n                          geslaagd={false}\r\n                          statsText=\"Item title 2\"\r\n                          description=\"Some information about the item\"\r\n                          readMore={true}\r\n                          readMoreLinkTo={\"https://google.com\"}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <ChartsCard\r\n                          geslaagd={false}\r\n                          statsText=\"Item title 3\"\r\n                          description=\"Some information about the item\"\r\n                          readMore={true}\r\n                          readMoreLinkTo={\"https://google.com\"}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <ChartsCard\r\n                          geslaagd={true}\r\n                          statsText=\"Item title 4\"\r\n                          description=\"Some information about the item\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row></Row>\r\n                  </Container>\r\n\r\n                  <div className=\"row\"></div>\r\n                </div>\r\n                <div></div>\r\n              </BrowserView>\r\n            </Fragment>\r\n            <div className=\"meterwrapper\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Output;\r\n","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\RealPassword.js",["93"],"import { Component } from \"react\";\r\n\r\nconst common_passwords = [\r\n  \"123456\",\r\n  \"password\",\r\n  \"12345678\",\r\n  \"qwerty\",\r\n  \"123456789\",\r\n  \"12345\",\r\n  \"111111\",\r\n  \"1234567\",\r\n  \"dragon\",\r\n  \"123123\",\r\n  \"baseball\",\r\n  \"abc123\",\r\n  \"football\",\r\n  \"letmein\",\r\n  \"monkey\",\r\n  \"696969\",\r\n  \"shadow\",\r\n  \"master\",\r\n  \"666666\",\r\n  \"qwertyuiop\",\r\n  \"123321\",\r\n];\r\n\r\nconst MAX_POINTS = 100;\r\nconst CONTAINS_ALPHANUMERIC = 3;\r\nconst CONTAINS_SPECIAL_CHAR = 1;\r\nconst CONTAINS_NUMBER = 1;\r\nconst LENGTH_MULTIPLIER = 1.2;\r\n\r\nclass RealPassword extends Component {\r\n  state = {\r\n    password: \"\",\r\n    alert: \"\",\r\n  };\r\n\r\n  setPassword(password) {\r\n    this.setState({ password: password });\r\n    this.state.password = password;\r\n  }\r\n\r\n  hasAlpha() {\r\n    return /[a-z]/.test(this.state.password);\r\n  }\r\n\r\n  hasCapitalAlpha() {\r\n    return /[A-Z]/.test(this.state.password);\r\n  }\r\n\r\n  hasSpecialChar() {\r\n    return /\\W|_/g.test(this.state.password);\r\n  }\r\n  hasNumber() {\r\n    return /\\d/.test(this.state.password);\r\n  }\r\n\r\n  countPointsNumber() {\r\n    return this.hasNumber() ? CONTAINS_NUMBER : 0;\r\n  }\r\n\r\n  countPointsSpecialChar() {\r\n    return this.hasSpecialChar() ? CONTAINS_SPECIAL_CHAR : 0;\r\n  }\r\n\r\n  countPointsAlphanumeric() {\r\n    return this.hasAlpha() ? CONTAINS_ALPHANUMERIC : 0;\r\n  }\r\n\r\n  setAlert() {\r\n    if (this.isCommonPassword()) {\r\n      this.setState({\r\n        alert: \"Password is in the list of 100.000 most used passwords!\",\r\n      });\r\n    }\r\n    console.log(this.state.alert);\r\n  }\r\n\r\n  isCommonPassword() {\r\n    return common_passwords.indexOf(this.state.password) > -1 ? 0 : 1;\r\n  }\r\n\r\n  getPoints() {\r\n    return (this.countPointsSpecialChar() +\r\n      this.countPointsAlphanumeric() +\r\n      this.hasCapitalAlpha() +\r\n      this.countPointsNumber()) *\r\n      Math.pow(this.state.password.length, LENGTH_MULTIPLIER) *\r\n      this.isCommonPassword() >\r\n      MAX_POINTS\r\n      ? MAX_POINTS\r\n      : (this.countPointsSpecialChar() +\r\n          this.countPointsAlphanumeric() +\r\n          this.hasCapitalAlpha() +\r\n          this.countPointsNumber()) *\r\n          Math.pow(this.state.password.length, LENGTH_MULTIPLIER) *\r\n          this.isCommonPassword();\r\n  }\r\n}\r\n\r\nexport default RealPassword;\r\n","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\ChartsCard.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\PortsTable.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\Navbar.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\SidebarData.js",["94"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"New Scan\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\",\r\n  },\r\n  {\r\n    title: \"Previous Scans\",\r\n    path: \"/reports\",\r\n    icon: <IoIcons.IoIosPaper />,\r\n    cName: \"nav-text\",\r\n  },\r\n  {\r\n    title: \"Support\",\r\n    path: \"/support\",\r\n    icon: <IoIcons.IoMdHelpCircle />,\r\n    cName: \"nav-text\",\r\n  },\r\n];\r\n",["95","96"],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\CompactCard.js",["97","98"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport PortsTable from \"./PortsTable\";\r\n\r\nconst geslaagd = \"./img/pass.png\";\r\nconst gezakt = \"./img/fail.png\";\r\n\r\nclass CompactCard extends Component {\r\n  state = {\r\n    img: this.props.geslaagd ? geslaagd : gezakt,\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"componentwidth\">\r\n        <Container className=\"compact-card\">\r\n          <Row>\r\n            <Col>\r\n              <div>\r\n                <img className=\"card-icon\" src={this.state.img} alt=\"\" />{\" \"}\r\n              </div>\r\n            </Col>\r\n            <Col md={12}>\r\n              <h1>Title of compact card</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div>{this.props.children}</div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={10}>\r\n              <h3>Some info about compact card</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <div className=\"textarea\">\r\n              <p>\r\n                Terrible information about not getting the right configurations\r\n                of your router. I'm personally so sorry for your settings, but\r\n                luckily... there is some good news!\r\n              </p>\r\n              <p>\r\n                Look here for your good news. It has come, the new start of a\r\n                much better world.\r\n              </p>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompactCard;\r\n","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\MacTable.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\WifiSignal.js",[],"C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\StringStripper.js",["99"],"import React, { Component } from \"react\";\r\n\r\nclass StringStripper extends Component {\r\n  state = {};\r\n\r\n  strip(text, start, end) {\r\n    return text.substr(start, end);\r\n  }\r\n\r\n  stripFrom(text, start, length = 0) {\r\n    return text.substr(\r\n      text.indexOf(start) + 1,\r\n      length === 0 ? text.length : length\r\n    );\r\n  }\r\n\r\n  stripTill(text, till, from = 0) {\r\n    return text.substr(from, text.indexOf(till));\r\n  }\r\n}\r\n\r\nexport default StringStripper;\r\n","C:\\Users\\Luca\\Documents\\React\\wifiscan\\src\\components\\RealPasswordStrengthMeter.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":41,"column":7,"nodeType":"106","endLine":41,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":44,"column":5,"nodeType":"106","endLine":44,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":45,"column":5,"nodeType":"106","endLine":45,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":99,"column":23,"nodeType":"109","endLine":102,"endColumn":25},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":29,"column":3,"nodeType":"114","messageId":"115","endLine":29,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":106,"column":5,"nodeType":"106","endLine":106,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":107,"column":5,"nodeType":"106","endLine":107,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":108,"column":5,"nodeType":"106","endLine":108,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":113,"column":5,"nodeType":"106","endLine":113,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":122,"column":5,"nodeType":"106","endLine":122,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":129,"column":5,"nodeType":"106","endLine":129,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":133,"column":5,"nodeType":"106","endLine":133,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":145,"column":10,"nodeType":"106","endLine":145,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":145,"column":51,"nodeType":"118","messageId":"119","endLine":145,"endColumn":52},{"ruleId":"104","severity":1,"message":"105","line":146,"column":10,"nodeType":"106","endLine":146,"endColumn":33},{"ruleId":"112","severity":1,"message":"120","line":162,"column":9,"nodeType":"114","messageId":"115","endLine":162,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":175,"column":5,"nodeType":"106","endLine":175,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":176,"column":5,"nodeType":"106","endLine":176,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":177,"column":5,"nodeType":"106","endLine":177,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":185,"column":5,"nodeType":"106","endLine":185,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":186,"column":5,"nodeType":"106","endLine":186,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":194,"column":22,"nodeType":"123","messageId":"124","endLine":194,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":41,"column":5,"nodeType":"106","endLine":41,"endColumn":15},{"ruleId":"112","severity":1,"message":"125","line":2,"column":13,"nodeType":"114","messageId":"115","endLine":2,"endColumn":20},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","replacedBy":"127"},{"ruleId":"112","severity":1,"message":"128","line":2,"column":31,"nodeType":"114","messageId":"115","endLine":2,"endColumn":36},{"ruleId":"112","severity":1,"message":"129","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":18},{"ruleId":"112","severity":1,"message":"130","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["131"],["132"],"no-unused-vars","'StackedBarChart' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'keys' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaIcons' is defined but never used.",["131"],["132"],"'Table' is defined but never used.","'PortsTable' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]